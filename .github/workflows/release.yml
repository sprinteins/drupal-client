name: Release

on:
  push:
    branches:
      - master

env:
  GRAALVM_VERSION: 21.0.0

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          # fetch entire history to analyze commits since last tag
          fetch-depth: 0
      - name: Bump version and push tag
        id: tag
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master,main
  macos:
    runs-on: macos-latest
    needs: version
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        env:
          REVISION: ${{ needs.version.outputs.new_version }}
        run: |
          wget -q https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${{ env.GRAALVM_VERSION }}/graalvm-ce-java11-darwin-amd64-${{ env.GRAALVM_VERSION }}.tar.gz
          tar xzf graalvm-ce-java11-darwin-amd64-${{ env.GRAALVM_VERSION }}.tar.gz
          export JAVA_HOME="$(pwd)/graalvm-ce-java11-${{ env.GRAALVM_VERSION }}/Contents/Home/"
          ${JAVA_HOME}/bin/gu install native-image
          brew install upx
          ./mvnw \
            --batch-mode \
            -Dsha1="${GITHUB_SHA}" \
            -Drevision="${REVISION}" \
            verify
          "./target/drupal-cli-macos-${REVISION}"
          upx --brute "target/drupal-cli-macos-${REVISION}"
          "./target/drupal-cli-macos-${REVISION}"
          mkdir target/artifacts
          cp target/drupal-cli-* target/artifacts
      - uses: actions/upload-artifact@v2.2.2
        with:
          name: drupal-cli-${{ github.job }}-${{ needs.version.outputs.new_version }}
          path: target/artifacts
  linux:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        env:
          REVISION: ${{ needs.version.outputs.new_version }}
        run: |
          wget -q https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz
          tar xf upx-3.96-amd64_linux.tar.xz
          wget -q https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${{ env.GRAALVM_VERSION }}/graalvm-ce-java11-linux-amd64-${{ env.GRAALVM_VERSION }}.tar.gz
          tar xzf graalvm-ce-java11-linux-amd64-${{ env.GRAALVM_VERSION }}.tar.gz
          export JAVA_HOME="$(pwd)/graalvm-ce-java11-${{ env.GRAALVM_VERSION }}"
          ${JAVA_HOME}/bin/gu install native-image
          ./mvnw \
            --batch-mode \
            -Dsha1="${GITHUB_SHA}" \
            -Drevision="${REVISION}" \
            verify
          "./target/drupal-cli-linux-${REVISION}"
          ./upx-3.96-amd64_linux/upx --brute "target/drupal-cli-linux-${REVISION}"
          "./target/drupal-cli-linux-${REVISION}"
          mkdir target/artifacts
          cp target/drupal-cli-* target/artifacts
      - uses: actions/upload-artifact@v2.2.2
        with:
          name: drupal-cli-${{ github.job }}-${{ needs.version.outputs.new_version }}
          path: target/artifacts
  windows:
    runs-on: windows-latest
    needs: version
    env:
      VCVARS_BAT: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - run: choco install graalvm --version=${{ env.GRAALVM_VERSION }} --no-progress
      - run: choco install upx --version=3.96 --no-progress
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: .m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        shell: cmd
        env:
          JAVA_HOME: C:\Program Files\GraalVM\graalvm-ce-java11-${{ env.GRAALVM_VERSION }}
          REVISION: ${{ needs.version.outputs.new_version }}
        run: |
          call "%JAVA_HOME%\bin\gu" install native-image
          call "%VCVARS_BAT%"
          call .\mvnw --batch-mode -Dsha1="%GITHUB_SHA%" -Drevision="%REVISION%" --settings .\.github\github-actions-windows-maven-settings.xml  verify
          .\target\drupal-cli-windows-%REVISION%.exe
          upx --brute target/drupal-cli-windows-%REVISION%.exe
          .\target\drupal-cli-windows-%REVISION%.exe
          mkdir target\artifacts
          copy target\drupal-cli-* target\artifacts
      - uses: actions/upload-artifact@v2.2.2
        with:
          name: drupal-cli-${{ github.job }}-${{ needs.version.outputs.new_version }}
          path: target/artifacts
  release:
    runs-on: ubuntu-latest
    needs: [version, macos, linux, windows]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./target
      - name: Build project
        working-directory: target
        run: |
          zip -r windows.zip drupal-cli-windows-${{ needs.version.outputs.new_version }}/
          zip -r linux.zip drupal-cli-linux-${{ needs.version.outputs.new_version }}/
          zip -r macos.zip drupal-cli-macos-${{ needs.version.outputs.new_version }}/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.new_version }}
          release_name: Release ${{ needs.version.outputs.new_version }}
          body: ${{ needs.version.outputs.changelog }}
          draft: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/linux.zip
          asset_name: drupal-cli-linux-${{ needs.version.outputs.new_version }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/windows.zip
          asset_name: drupal-cli-windows-${{ needs.version.outputs.new_version }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/macos.zip
          asset_name: drupal-cli-macos-${{ needs.version.outputs.new_version }}.zip
          asset_content_type: application/zip
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
  deploy:
    needs: [version, release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Publish to GitHub Packages Apache Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REVISION: ${{ needs.version.outputs.new_version }}
        run: |
          ./mvnw \
            --batch-mode \
            --settings ./.github/github-packages-maven-settings.xml \
            -Dsha1="${GITHUB_SHA}" \
            -Drevision="${REVISION}" \
            -DaltDeploymentRepository="github::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}" \
            deploy
